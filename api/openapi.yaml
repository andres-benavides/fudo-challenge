openapi: 3.0.0
info:
  title: API Challenge FUDO
  description: API to management user and products with authentication JWT
  version: 1.0.0

servers:
  - url: http://localhost:9292
    description: localhost

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /signup:
    post:
      summary: Register user
      description: Create a new user with email and password.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@example.com"
                password:
                  type: string
                  format: password
                  minLength: 6
                  example: "123456"
      responses:
        "201":
          description: User created
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    oneOf:
                      - type: string
                        example: "email is already taken"
                      - type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                          example:
                            email:
                              - "is in invalid format"
                            password:
                              - "is too short (minimum is 8 characters)"
              examples:
                simple_error:
                  summary: Simple error message
                  value:
                    error: "email is already taken"
                validation_error:
                  summary: Validation error with multiple fields
                  value:
                    error:
                      email:
                        - "is in invalid format"
                      password:
                        - "size cannot be less than 6"

  /login:
    post:
      summary: Sing in
      description: Authenticates a user and returns a JWT token.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@example.com"
                password:
                  type: string
                  format: password
                  example: "123456"
      responses:
        "200":
          description: Sing in success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "401":
          description: Sing in error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid credentials"

  /products:
    post:
      summary: Create a new product
      description: Create a new product in the API.
      operationId: createProduct
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "Coca cola de vainilla light"
      responses:
        "202":
          description: Send product to creation queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product creation in process"
        "422":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                    example:
                      name:
                        - "must be filled"
              examples:
                validation_error_name_empty:
                  summary: Name empty
                  value:
                    error:
                      name:
                        - "must be filled"
                validation_error_name_size:
                  summary: Size of name
                  value:
                    error:
                      name:
                        - "size cannot be less than 3"

    get:
      summary: Get list of products
      description: Returns the list of registered products.
      operationId: listProducts
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Return list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: "Coca cola de vainilla light"
